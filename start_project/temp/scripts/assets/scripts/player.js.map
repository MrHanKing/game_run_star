{"version":3,"sources":["assets\\scripts\\player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpTime","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","_squashDuration","self","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","squash","scaleTo","stretch","scaleBack","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setInputControl","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","TOUCH_ONE_BY_ONE","onTouchBegan","touch","touchLoc","getLocation","console","log","x","y","winSize","width","onTouchEnded","onLoad","enabled","jumpAction","xSpeed","update","dt","Math","abs","sceneSizeW","game","getSceneSize","starMoveAt","pos","setPosition","runAction","stopMove","stopAllActions"],"mappings":"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","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        //主角跳跃高度\r\n        jumpHeight:0,\r\n        //主角跳跃持续时间\r\n        jumpTime:0,\r\n        //最大移动速度\r\n        maxMoveSpeed:0,\r\n        //加速度\r\n        accel:0,\r\n        jumpAudio:{\r\n            default:null,\r\n            url:cc.AudioClip\r\n        },\r\n    },\r\n    \r\n    //跳跃\r\n    setJumpAction:function(){\r\n        var _squashDuration = 0.1;\r\n        //跳跃\r\n        var self = this;\r\n        var jumpUp = cc.moveBy(self.jumpTime, cc.p(0,self.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        //下落\r\n        var jumpDown = cc.moveBy(self.jumpTime, cc.p(0,-self.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        //形变\r\n        var squash = cc.scaleTo(_squashDuration, 1, 0.6);\r\n        var stretch = cc.scaleTo(_squashDuration, 1, 1.2);\r\n        var scaleBack = cc.scaleTo(_squashDuration, 1, 1);\r\n        //设置音乐回调\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        //循环\r\n        return cc.repeatForever(cc.sequence(squash, stretch, jumpUp, scaleBack, jumpDown, callback));\r\n    },\r\n    \r\n    //调用音乐函数\r\n    playJumpSound:function(){\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    \r\n    //设置输入控制\r\n    setInputControl:function(){\r\n        var self = this;\r\n        cc.eventManager.addListener({\r\n            event:cc.EventListener.KEYBOARD,\r\n            //按下键\r\n            onKeyPressed:function(keyCode,event){\r\n                switch(keyCode){\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            //松开键\r\n            onKeyReleased:function(keyCode,event){\r\n                switch(keyCode){\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        }, self.node);\r\n\r\n        cc.eventManager.addListener({\r\n            event:cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            onTouchBegan:function (touch, event) {\r\n                var touchLoc = touch.getLocation();\r\n                console.log('touch in pos：', touchLoc.x, touchLoc.y);\r\n                if (touchLoc.x >= cc.winSize.width / 2) {\r\n                    self.accLeft = false;\r\n                    self.accRight = true;\r\n                }\r\n                else {\r\n                    self.accLeft = true;\r\n                    self.accRight = false;\r\n                }\r\n                return true;\r\n            },\r\n            onTouchEnded:function(touch, event) {\r\n                self.accLeft = false;\r\n                self.accRight = false;                \r\n            }\r\n        }, self.node)\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.enabled = false;\r\n        //初始化跳跃\r\n        this.jumpAction = this.setJumpAction();\r\n        \r\n        //加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        this.xSpeed = 0;\r\n        \r\n        //初始化键盘输入\r\n        this.setInputControl()\r\n    },\r\n    \r\n    update:function(dt){\r\n        //根据当前加速度方向每帧更新速度\r\n        if (this.accLeft){\r\n            //方向切换直接更改速度方向\r\n            this.xSpeed = (this.xSpeed > 0) ? -this.xSpeed:this.xSpeed;\r\n            this.xSpeed -= this.accel * dt;\r\n        } \r\n        else if (this.accRight){\r\n            this.xSpeed = (this.xSpeed < 0) ? -this.xSpeed:this.xSpeed;\r\n            this.xSpeed += this.accel * dt;\r\n        } \r\n        else {\r\n            //不按键时自衰减速度\r\n            this.xSpeed -= this.xSpeed * dt;\r\n            if (Math.abs(this.xSpeed) < 1){\r\n                this.xSpeed = 0;\r\n            }\r\n        }\r\n        //限制主角的最大速度\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed){\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        //根据速度更新主角位置\r\n        this.node.x += this.xSpeed * dt\r\n        // 场景行走区域判断\r\n        var sceneSizeW = this.game.getSceneSize().width;\r\n        console.log(\"sceneSizeW:\",sceneSizeW);\r\n        if (Math.abs(this.node.x) > sceneSizeW / 2 - this.node.width / 2) {\r\n            this.node.x = (sceneSizeW / 2 - this.node.width / 2) * this.node.x / Math.abs(this.node.x);\r\n        }\r\n    },\r\n\r\n    starMoveAt:function(pos){\r\n        this.enabled = true;\r\n        this.xSpeed = 0;\r\n        this.node.setPosition(pos);\r\n        this.node.runAction(this.jumpAction);\r\n    },\r\n\r\n    stopMove:function(){\r\n        this.node.stopAllActions();\r\n    }\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}