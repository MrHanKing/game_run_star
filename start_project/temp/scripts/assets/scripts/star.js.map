{"version":3,"sources":["assets\\scripts\\star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","starBar","default","type","ProgressBar","onLoad","getPlayerDistance","playerPos","game","player","getPosition","distance","pDistance","node","position","onPicked","spawnNewStar","destroy","update","gainScore","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor","progress"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,oBAAW,CAZH;AAaRC,iBAAQ;AACJC,qBAAQ,IADJ;AAEJC,kBAAKR,GAAGS;AAFJ;AAbA,KAHP;;AAsBL;AACAC,YAAQ,kBAAY;AAChB;AACH,KAzBI;;AA2BLC,uBAAkB,6BAAU;AACxB;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,WAAWhB,GAAGiB,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCP,SAAjC,CAAf;AACA,eAAOI,QAAP;AACH,KAjCI;;AAmCLI,cAAS,oBAAU;AACf;AACA,aAAKP,IAAL,CAAUQ,YAAV;AACA;AACA,aAAKH,IAAL,CAAUI,OAAV;AACH,KAxCI;;AA0CLC,YAAO,kBAAU;AACb,YAAI,KAAKZ,iBAAL,KAA2B,KAAKN,UAApC,EAA+C;AAC3C,iBAAKe,QAAL;AACA,iBAAKP,IAAL,CAAUW,SAAV,CAAoB,KAAKN,IAAL,CAAUH,WAAV,EAApB;AACA;AACH;AACD;AACA,YAAIU,eAAe,IAAI,KAAKZ,IAAL,CAAUa,KAAV,GAAgB,KAAKb,IAAL,CAAUc,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKV,IAAL,CAAUW,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACA,aAAKtB,OAAL,CAAa0B,QAAb,GAAwB,KAAKnB,IAAL,CAAUa,KAAV,GAAgB,KAAKb,IAAL,CAAUc,YAAlD;AACH;;AAED;AACA;;AAEA;AA1DK,CAAT","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n        pickRadius:0,\r\n        starBar:{\r\n            default:null,\r\n            type:cc.ProgressBar\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        //this.starBar.progress = 0;\r\n    },\r\n    \r\n    getPlayerDistance:function(){\r\n        //根据player节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        //计算距离\r\n        var distance = cc.pDistance(this.node.position, playerPos);\r\n        return distance;\r\n    },\r\n        \r\n    onPicked:function(){\r\n        //当星星被收集时，调用Game脚本中的接口，生成新的星星。\r\n        this.game.spawnNewStar();\r\n        //销毁当前星星\r\n        this.node.destroy();\r\n    },\r\n    \r\n    update:function(){\r\n        if (this.getPlayerDistance() < this.pickRadius){\r\n            this.onPicked();\r\n            this.game.gainScore(this.node.getPosition());\r\n            return;\r\n        }\r\n        //根据存在时间改变星星透明度\r\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n        this.starBar.progress = this.game.timer/this.game.starDuration;\r\n    }\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}